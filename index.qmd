---
title: "Styringsinformasjon fra Speil"
execute:
    output: false
    echo: false
format:
    html:
        self-contained: true
        theme:
            - custom.scss
---


```{python}
import datetime as dt
import locale
import os
from functools import partial
from dotenv import load_dotenv
from google.cloud import bigquery

from figurer import (
    antall_med_glidende_gjennomsnitt,
    antall_vedtak_fattet,
    mottatte_søknader,
    antall_avsluttet_uten_utbetaling,
    tid_fra_søknad_til_vedtak,
)

try:
    locale.setlocale(locale.LC_TIME, "nb_NO") # linux
except:
    locale.setlocale(locale.LC_TIME, "no_NO") # mac

load_dotenv(override=True)
LOCATION = "europe-north1"
PROJECT = os.environ["GCP_TEAM_PROJECT_ID"]
client = bigquery.Client(location=LOCATION, project=PROJECT)
```

:::: {.section-odd #om-fortellingen}
::: {.section-content}

```{python}
# | output: true
print(f'Sist oppdatert: {dt.datetime.now().strftime("%Y-%m-%d %H:%M")}')

```


### Om fortellingen


Denne fortellingen har som hensikt å formidle styringsinformasjon fra Speil (den nye sykepengeløsningen).

Datafortellingen er NAV Intern; dette er ikke offisiell statistikk og skal ikke deles utenfor NAV.
Datafortellingen skal kun benyttes til styringsformål.

Per nå behandles kun søknader fra arbeidstakere i Speil.

:::: {#callout-box}
::: {.callout-note collapse="true" appearance="minimal"}
## Mer om dataene som presenteres

Saksbehandling skjer foreløpig både i Speil og i Gosys/Infotrygd. Dataene som presenteres her stammer kun fra Speil.

Siden dataene er ment for å kunne gjøre prioriteringer og valg knyttet til saksbehandling er det avgjørende at det som presenteres stemmer overens med det som faktisk skjer.

Foreløpig presenterer vi data om søknader og vedtak. Over tid er det tenkt at vi vil legge til data fra flere hendelser i saksbehandlingen.

:::

::: {.callout-note collapse="true" appearance="minimal"}
## Mer om teamet

Produktområde Helse har et team som jobber med denne fortellingen. Teamet består av medlemmer fra ulike team innen produktområdet.

Kontaktperson for teamet er Christina Grønhaug.

:::
::::

:::
::::


:::: {.section-even}
::: {.section-content}

::: {style="margin-bottom: 15px"}

### Søknad

Når en sykmeldt sender inn en sykepengesøknad via nav.no havner søknaden i Speil. Dette omfatter også søknader som viser seg å være innenfor perioden arbeidsgiver skal dekke.

Om brukeren sender en oppdatert søknad, kaller vi det en korrigerende søknad.

:::

::: {style="margin-bottom: 25px"}

::: {.nokkeltall}

```{python}
# | class: nokkeltall
# | output: true
current_date = dt.datetime.now().date()
formatted_date = current_date.strftime("%d. %B %Y").replace(
    current_date.strftime("%B"), current_date.strftime("%B").lower()
)
print(f"Innsendte søknader per {formatted_date}")


```

:::

```{python}
def antall_for_n_uker_siden(
    antall_uker_siden, timestamp_felt, tabell, tilleggspredikat=""
):
    QUERY = f"""--sql
    SELECT
        COUNT(*)
    FROM `{tabell}`
    WHERE DATE_TRUNC(DATE({timestamp_felt}, 'Europe/Oslo'), WEEK(MONDAY)) >= DATE_TRUNC(DATE_SUB(DATE(CURRENT_TIMESTAMP(), 'Europe/Oslo'), INTERVAL {str(antall_uker_siden)} WEEK), WEEK(MONDAY))
    AND DATE_TRUNC(DATE({timestamp_felt}, 'Europe/Oslo'), WEEK(MONDAY)) < DATE_TRUNC(DATE_SUB(DATE(CURRENT_TIMESTAMP(), 'Europe/Oslo'), INTERVAL {str(antall_uker_siden)} - 1 WEEK), WEEK(MONDAY))
    {tilleggspredikat}
    """

    query_job = client.query(QUERY)
    rows = query_job.result()

    # get first value in first row of RowIterator
    return [row[0] for row in rows][0]


```

:::: {.nokkeltallboks-layout}

```{python}
# | class: nokkeltallboks-innhold
# | output: true
value = antall_for_n_uker_siden(
    2, "soknad_mottatt", "styringsinfo_dataset.styringsinfo_sendt_soknad_view"
)
print(f"{value}\nto uker siden")
```


```{python}
# | class: nokkeltallboks-innhold
# | output: true
value = antall_for_n_uker_siden(
    1, "soknad_mottatt", "styringsinfo_dataset.styringsinfo_sendt_soknad_view"
)
print(f"{value}\nforrige uke")
```


```{python}
# | class: nokkeltallboks-innhold
# | output: true
value = antall_for_n_uker_siden(
    0, "soknad_mottatt", "styringsinfo_dataset.styringsinfo_sendt_soknad_view"
)
print(f"{value}\ndenne uken")
```

::::

:::

::: {style="margin-bottom: 50px"}

```{python}
# | class: no-rows
# | output: true
mottatte_søknader(client).show()
```

:::
```{python}
# | output: true
fig = antall_med_glidende_gjennomsnitt(
    "Antall mottatte søknader per dag og 7- og 28-dagers glidende gjennomsnitt",
    "soknad_mottatt",
    "styringsinfo_dataset.styringsinfo_sendt_soknad_view",
    client,
)
fig.show()
```

:::
::::

:::: {.section-odd #vedtak}
::: {.section-content}

::: {style="margin-bottom: 25px"}

### Vedtak i Speil

Dette er vedtak som er fattet i Speil, manuelt eller automatisk.

Vedtak som fattes i Infotrygd er ikke med, selv om søknaden har vært innom Speil og er med i søknadstallene ovenfor.

:::

::: {.nokkeltall}

```{python}
# | class: nokkeltall
# | output: true
current_date = dt.datetime.now().date()
formatted_date = current_date.strftime("%d. %B %Y").replace(
    current_date.strftime("%B"), current_date.strftime("%B").lower()
)
print(f"Antall vedtak per {formatted_date}")
```

:::

::: {.nokkeltallboks-layout}
```{python}
vedtak_for_n_uker_siden = partial(
    antall_for_n_uker_siden,
    timestamp_felt="vedtak_fattet",
    tabell="styringsinfo_dataset.styringsinfo_vedtak_fattet_view",
    tilleggspredikat="AND har_utbetaling=true",
)
```

```{python}
# | class: nokkeltallboks-innhold-hvit
# | output: true
value = vedtak_for_n_uker_siden(2)
print(f"{value}\nto uker siden")
```


```{python}
# | class: nokkeltallboks-innhold-hvit
# | output: true
value = vedtak_for_n_uker_siden(1)
print(f"{value}\nforrige uke")
```


```{python}
# | class: nokkeltallboks-innhold-hvit
# | output: true
value = vedtak_for_n_uker_siden(0)
print(f"{value}\ndenne uken")
```

:::

```{python}
# | class: no-rows
# | output: true
antall_vedtak_fattet(client).show()
```

```{python}
# | output: true
fig = antall_med_glidende_gjennomsnitt(
    "Vedtak per dag og 7- og 28-dagers glidende gjennomsnitt",
    "vedtak_fattet",
    "styringsinfo_dataset.styringsinfo_vedtak_fattet_view",
    client,
    predikat="WHERE har_utbetaling=true",
)

fig.update_layout(
    paper_bgcolor="rgba(0,0,0,0)",
    plot_bgcolor="rgba(0,0,0,0)",
)
fig.show()
```

:::
::::

:::: {.section-even}
::: {.section-content}

### Ferdigstilt innenfor arbeidsgiverperioden

Her ser vi søknader der NAV ikke utfører saksbehandling fordi søknadsperioden er innenfor perioden arbeidsgiver skal dekke.


::: {.nokkeltall}

```{python}
# | class: nokkeltall
# | output: true
current_date = dt.datetime.now().date()
formatted_date = current_date.strftime("%d. %B %Y").replace(
    current_date.strftime("%B"), current_date.strftime("%B").lower()
)
print(f"Antall per {formatted_date}")
```

:::

::: {.nokkeltallboks-layout}
```{python}
auu_for_n_uker_siden = partial(
    antall_for_n_uker_siden,
    timestamp_felt="vedtak_fattet",
    tabell="styringsinfo_dataset.styringsinfo_vedtak_fattet_view",
    tilleggspredikat="AND har_utbetaling=false",
)
```

```{python}
# | class: nokkeltallboks-innhold
# | output: true
value = auu_for_n_uker_siden(2)
print(f"{value}\nto uker siden")
```


```{python}
# | class: nokkeltallboks-innhold
# | output: true
value = auu_for_n_uker_siden(1)
print(f"{value}\nforrige uke")
```


```{python}
# | class: nokkeltallboks-innhold
# | output: true
value = auu_for_n_uker_siden(0)
print(f"{value}\ndenne uken")
```

:::

```{python}
# | class: no-rows
# | output: true
antall_avsluttet_uten_utbetaling(client).show()
```

```{python}
# | output: true
fig = antall_med_glidende_gjennomsnitt(
    "Vedtak per dag og 7- og 28-dagers glidende gjennomsnitt",
    "vedtak_fattet",
    "styringsinfo_dataset.styringsinfo_vedtak_fattet_view",
    client,
    predikat="WHERE har_utbetaling=false",
)
fig.update_layout(
    paper_bgcolor="rgba(0,0,0,0)",
    plot_bgcolor="rgba(0,0,0,0)",
)
fig.show()
```

:::
::::

:::: {.section-odd}
::: {.section-content}

### Alder på søknad på vedtakstidspunkt

Her ser vi på alle søknader som det ble fattet vedtak på i løpet av en uke, og betrakter hvor mange dager det gikk fra vi mottok søknaden til vedtaket ble fattet.

Nøkkeltallene viser:

- Antall vedtak der søknaden var under ett døgn gammel på vedtakstidspunket.
- Antall vedtak der søknaden var mellom 1 og 90 dager gammel (se grafen under for fordeling).
- Antall vedtak der søknaden var mer enn 90 dager gammel.

For tidsbruk mellom 1 og 90 dager viser grafen fordelingen i alder på søknadene som fikk vedtak. For vedtak med flere søknader teller vi fra den siste søknaden som ble sendt inn.

```{python}
# | output: true
tid_fra_søknad_til_vedtak(client).show()
```

:::
::::

{{< include flexjar/src/tilbakemelding.qmd >}}
